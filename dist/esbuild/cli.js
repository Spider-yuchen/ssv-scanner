#!/usr/bin/env node
"use strict";(()=>{var ee=Object.create;var W=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var te=Object.getOwnPropertyNames;var se=Object.getPrototypeOf,oe=Object.prototype.hasOwnProperty;var g=(t=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(t,{get:(e,r)=>(typeof require!="undefined"?require:e)[r]}):t)(function(t){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var ne=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var ae=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of te(e))!oe.call(t,s)&&s!==r&&W(t,s,{get:()=>e[s],enumerable:!(o=re(e,s))||o.enumerable});return t};var B=(t,e,r)=>(r=t!=null?ee(se(t)):{},ae(e||!t||!t.__esModule?W(r,"default",{value:t,enumerable:!0}):r,t));var u=(t,e,r)=>new Promise((o,s)=>{var n=a=>{try{i(r.next(a))}catch(d){s(d)}},c=a=>{try{i(r.throw(a))}catch(d){s(d)}},i=a=>a.done?o(a.value):Promise.resolve(a.value).then(n,c);i((r=r.apply(t,e)).next())});var F=ne((me,Y)=>{var l=Y.exports={},w,f;function q(){throw new Error("setTimeout has not been defined")}function $(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?w=setTimeout:w=q}catch{w=q}try{typeof clearTimeout=="function"?f=clearTimeout:f=$}catch{f=$}})();function R(t){if(w===setTimeout)return setTimeout(t,0);if((w===q||!w)&&setTimeout)return w=setTimeout,setTimeout(t,0);try{return w(t,0)}catch{try{return w.call(null,t,0)}catch{return w.call(this,t,0)}}}function ce(t){if(f===clearTimeout)return clearTimeout(t);if((f===$||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(t);try{return f(t)}catch{try{return f.call(null,t)}catch{return f.call(this,t)}}}var b=[],E=!1,A,N=-1;function de(){!E||!A||(E=!1,A.length?b=A.concat(b):N=-1,b.length&&J())}function J(){if(!E){var t=R(de);E=!0;for(var e=b.length;e;){for(A=b,b=[];++N<e;)A&&A[N].run();N=-1,e=b.length}A=null,E=!1,ce(t)}}l.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];b.push(new K(t,e)),b.length===1&&!E&&R(J)};function K(t,e){this.fun=t,this.array=e}K.prototype.run=function(){this.fun.apply(null,this.array)};l.title="browser";l.browser=!0;l.env={};l.argv=[];l.version="";l.versions={};function y(){}l.on=y;l.addListener=y;l.once=y;l.off=y;l.removeListener=y;l.removeAllListeners=y;l.emit=y;l.prependListener=y;l.prependOnceListener=y;l.listeners=function(t){return[]};l.binding=function(t){throw new Error("process.binding is not supported")};l.cwd=function(){return"/"};l.chdir=function(t){throw new Error("process.chdir is not supported")};l.umask=function(){return 0}});var X=B(g("figlet"));var D={name:"ssv-scanner",version:"1.0.2",description:"Tool for retrieving events data (cluster snapshots and owner nonce) from the SSV network contract.",author:"SSV.Network",repository:"https://github.com/bloxapp/ssv-scanner",license:"MIT",keywords:["ssv","ssv.network","cluster","nonce","scanner"],main:"./dist/tsc/src/main.js",types:"./dist/tsc/src/main.d.ts",bin:{"ssv-keys":"./dist/tsc/src/cli.js"},engines:{node:">=12"},scripts:{"dev:cli":"ts-node src/cli.ts",cli:"node ./dist/tsc/src/cli.js",lint:"eslint src/ --ext .js,.jsx,.ts,.tsx",clean:"rm -rf dist build package","ts-node":"ts-node","copy-json":"cpy './src/shared/abi/*.json' './dist/tsc/src/shared/abi/'",build:"tsc -p tsconfig.json","build-all":"yarn clean && yarn build && yarn copy-json && yarn esbuild",esbuild:"node ./esbuild.js","pre-commit":"yarn test && yarn lint && yarn build-all"},devDependencies:{"@types/argparse":"^2.0.10","@types/cli-progress":"^3.11.0","@types/node":"^15.14.9","cpy-cli":"^5.0.0",esbuild:"^0.14.38","esbuild-node-externals":"^1.4.1",eslint:"^7.32.0","ts-node":"^10.9.1",typescript:"^4.6.4"},dependencies:{"@types/figlet":"^1.5.4",argparse:"^2.0.1","cli-progress":"^3.11.2",figlet:"^1.5.2",web3:"^1.10.0"},licenses:[{MIT:"SEE LICENSE IN LICENCE FILE"}]};var j=B(F()),Z=g("argparse");var Q=g("argparse"),S=class{constructor(e,r){this.name=e;this.description=r;this.env="";this.parser=new Q.ArgumentParser({description:this.description}),this.setArguments(this.parser)}parse(e){e.splice(0,1);let r=e.map(s=>(s.endsWith("_stage")&&(this.env="stage",s=s.replace("_stage","")),s)),o=this.parser.parse_args(r);return this.env&&(o.network+=`_${this.env}`),o}};var M=B(g("cli-progress"));var z=B(g("web3"));var P={MAINNET:"prod:v4.mainnet",PRATER:"prod:v4.prater",HOLESKY:"prod:v4.holesky",PRATER_STAGE:"stage:v4.prater",HOLESKY_STAGE:"stage:v4.holesky"},T=class{constructor(e,r,o){let[s,n]=r.split(".");s=s.toUpperCase(),n=n.toUpperCase();let c;try{c=g(`../shared/abi/${e}.${r}.abi.json`)}catch(a){throw console.error(`Failed to load JSON data from ${e}.${r}.abi.json`,a),a}let i;try{i=g(`../shared/abi/${e}.${r}.views.abi.json`)}catch(a){throw console.error(`Failed to load JSON data from ${e}.${r}.views.abi.json`,a),a}if(!c.contractAddress||!c.abi||!c.genesisBlock)throw new Error(`Missing core data in JSON for ${e}.${r}`);if(!i.contractAddress||!i.abi)throw new Error(`Missing views data in JSON for ${e}.${r}`);this.contract={version:s,network:n,address:c.contractAddress,addressViews:i.contractAddress,abi:c.abi,abiViews:i.abi,genesisBlock:c.genesisBlock},this.web3=new z.default(o)}get abiCore(){return this.contract.abi}get abiViews(){return this.contract.abiViews}get contractCore(){return new this.web3.eth.Contract(this.abiCore,this.contract.address)}get contractViews(){return new this.web3.eth.Contract(this.abiViews,this.contract.addressViews)}get genesisBlock(){return this.contract.genesisBlock}};var L=B(g("web3")),x=class{constructor(e){this.DAY=5400;this.WEEK=this.DAY*7;this.MONTH=this.DAY*30;if(!e.nodeUrl)throw Error("ETH1 node is required");if(!e.network)throw Error("Network is required");if(!e.ownerAddress)throw Error("Cluster owner address is required");if(e.ownerAddress.length!==42)throw Error("Invalid owner address length.");if(!e.ownerAddress.startsWith("0x"))throw Error("Invalid owner address.");this.params=e,this.params.contractAddress=new L.default().utils.toChecksumAddress(this.params.contractAddress),this.params.ownerAddress=new L.default().utils.toChecksumAddress(this.params.ownerAddress)}};var V=class extends x{constructor(){super(...arguments);this.eventsList=["ValidatorAdded"]}run(r){return u(this,null,function*(){r&&(console.log(`
Scanning blockchain...`),this.progressBar=new M.default.SingleBar({},M.default.Presets.shades_classic));try{let o=yield this._getLatestNonce(r);return r&&this.progressBar.stop(),o}catch(o){throw r&&this.progressBar.stop(),new Error(o)}})}_getLatestNonce(r){return u(this,null,function*(){let[o,s]=P[this.params.network.toUpperCase()].split(":"),n=new T(o,s,this.params.nodeUrl),c;try{c=yield n.web3.eth.getBlockNumber()}catch(C){throw new Error("Could not access the provided node endpoint.")}try{yield n.contractCore.methods.owner().call()}catch(C){throw new Error("Could not find any cluster snapshot from the provided contract address.")}let i=this.MONTH,a=0,d=n.genesisBlock,k=n.web3.eth.abi.encodeParameter("address",this.params.ownerAddress),p={fromBlock:d,toBlock:c,topics:[null,k]};r&&this.progressBar.start(c,0);do{let C;try{C=(yield n.contractCore.getPastEvents("AllEvents",p)).filter(m=>this.eventsList.includes(m.event)),a+=C.length,p.fromBlock=p.toBlock+1}catch(m){if(i===this.MONTH)i=this.WEEK;else if(i===this.WEEK)i=this.DAY;else throw new Error(m)}p.toBlock=Math.min(p.fromBlock+i,c),r&&this.progressBar.update(p.toBlock)}while(p.toBlock-p.fromBlock>0);return r&&this.progressBar.update(c,c),a})}};var _=class extends S{constructor(){super("nonce","Handles nonce operations")}setArguments(e){e.add_argument("-nw","--network",{help:"The network",choices:["mainnet","prater","holesky"],required:!0,dest:"network"}),e.add_argument("-n","--node-url",{help:"ETH1 (execution client) node endpoint url",required:!0,dest:"nodeUrl"}),e.add_argument("-oa","--owner-address",{help:"The cluster owner address (in the SSV contract)",required:!0,dest:"ownerAddress"})}run(e){return u(this,null,function*(){try{let o=yield new V(e).run(!0);console.log("Next Nonce:",o)}catch(r){console.error("\x1B[31m",r.message)}})}};var H=B(g("cli-progress"));var O=class extends x{constructor(){super(...arguments);this.eventsList=["ClusterDeposited","ClusterWithdrawn","ValidatorRemoved","ValidatorAdded","ClusterLiquidated","ClusterReactivated"]}run(r,o){return u(this,null,function*(){if(!(Array.isArray(r)&&this._isValidOperatorIds(r.length)))throw Error("Comma-separated list of operator IDs. The amount must be 3f+1 compatible.");r=[...r].sort((c,i)=>c-i),o&&(console.log(`
Scanning blockchain...`),this.progressBar=new H.default.SingleBar({},H.default.Presets.shades_classic));let n=yield this._getClusterSnapshot(r,o);return o&&this.progressBar.stop(),n})}_getClusterSnapshot(r,o){return u(this,null,function*(){let s,[n,c]=P[this.params.network.toUpperCase()].split(":"),i=new T(n,c,this.params.nodeUrl);try{s=yield i.web3.eth.getBlockNumber()}catch(v){throw new Error("Could not access the provided node endpoint: "+v)}try{yield i.contractCore.methods.owner().call()}catch(v){throw new Error("Could not find any cluster snapshot from the provided contract address: "+v)}let a=this.MONTH,d,k=0,p=i.genesisBlock,C=i.web3.eth.abi.encodeParameter("address",this.params.ownerAddress),m={fromBlock:Math.max(s-a,p),toBlock:s,topics:[null,C]};for(o&&this.progressBar.start(s,0);!d&&m.fromBlock>=p;){let v;try{v=yield i.contractCore.getPastEvents("allEvents",m),v.filter(h=>this.eventsList.includes(h.event)).filter(h=>JSON.stringify(h.returnValues.operatorIds.map(G=>+G))===JSON.stringify(r)).forEach(h=>{h.blockNumber>k&&(k=h.blockNumber,d=h.returnValues.cluster)}),m.toBlock=m.fromBlock}catch(h){console.error(h),a===this.MONTH?a=this.WEEK:a===this.WEEK&&(a=this.DAY)}m.fromBlock=m.toBlock-a,o&&this.progressBar.update(s-(m.toBlock-a))}return o&&this.progressBar.update(s,s),d=d||["0","0","0",!0,"0"],{payload:{Owner:this.params.ownerAddress,Operators:r.sort((v,h)=>v-h).join(","),Block:k||s,Data:d.join(",")},cluster:{validatorCount:d[0],networkFeeIndex:d[1],index:d[2],active:d[3],balance:d[4]}}})}_isValidOperatorIds(r){return!(r<4||r>13||r%3!=1)}};var I=class extends S{constructor(){super("cluster","Handles cluster operations")}setArguments(e){e.add_argument("-nw","--network",{help:"The network",choices:["mainnet","prater","holesky"],required:!0,dest:"network"}),e.add_argument("-n","--node-url",{help:"ETH1 (execution client) node endpoint url",required:!0,dest:"nodeUrl"}),e.add_argument("-oa","--owner-address",{help:"The cluster owner address (in the SSV contract)",required:!0,dest:"ownerAddress"}),e.add_argument("-oids","--operator-ids",{help:"Comma-separated list of operators IDs regarding the cluster that you want to query",required:!0,dest:"operatorIds"})}run(e){return u(this,null,function*(){try{let r=e.operatorIds.split(",").map(n=>{if(Number.isNaN(+n))throw new Error("Operator Id should be the number");return+n}).sort((n,c)=>n-c),s=yield new O(e).run(r,!0);console.table(s.payload),console.log("Cluster snapshot:"),console.table(s.cluster),console.log(JSON.stringify({block:s.payload.Block,"cluster snapshot":s.cluster,cluster:Object.values(s.cluster)},null,"  "))}catch(r){console.error("\x1B[31m",r.message)}})}};var le=t=>u(void 0,null,function*(){return new Promise(e=>{(0,X.default)(t,(r,o)=>{if(r)return e("");e(o)})})});function U(){return u(this,null,function*(){let t=`SSV Scanner v${D.version}`,e=yield le(t);if(e){console.log(" -----------------------------------------------------------------------------------"),console.log(`${e||t}`),console.log(" -----------------------------------------------------------------------------------");for(let k of String(D.description).match(/.{1,75}/g)||[])console.log(` ${k}`);console.log(` -----------------------------------------------------------------------------------
`)}let r=new Z.ArgumentParser,o=r.add_subparsers({title:"commands",dest:"command"}),s=new I,n=new _,c=o.add_parser(s.name,{add_help:!0}),i=o.add_parser(n.name,{add_help:!0}),a="",d=j.argv.slice(2);switch(d[1]&&d[1].includes("--help")?(s.setArguments(c),n.setArguments(i),r.parse_args()):(a=r.parse_known_args()[0].command,s.setArguments(c),n.setArguments(i)),a){case s.name:yield s.run(s.parse(d));break;case n.name:yield n.run(n.parse(d));break;default:console.error("Command not found"),j.exit(1)}})}U();})();
